import { useState } from 'react'
import { Sparkles, FileText, TrendingUp, Zap, ChevronDown, Menu, X, Mail, Lock, User, Eye, EyeOff } from 'lucide-react'
import { AuthProvider, useAuth } from './contexts/AuthContext'
import PromptPage from './components/PromptPage'
import logo from "../src/assets/1000195692.png"
import './App.css'

// Landing Page Component
function LandingPage() {
  const { login, register } = useAuth()
  const [openFaq, setOpenFaq] = useState(null)
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)
  const [showAuthModal, setShowAuthModal] = useState(false)
  const [authMode, setAuthMode] = useState('login') // 'login' or 'signup'
  const [showPassword, setShowPassword] = useState(false)
  const [authError, setAuthError] = useState('')
  const [authLoading, setAuthLoading] = useState(false)
  
  // Form states
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: ''
  })

  const toggleFaq = (index) => {
    setOpenFaq(openFaq === index ? null : index)
  }

  const openAuthModal = (mode) => {
    setAuthMode(mode)
    setShowAuthModal(true)
    setMobileMenuOpen(false)
  }

  const closeAuthModal = () => {
    setShowAuthModal(false)
    setFormData({ name: '', email: '', password: '' })
    setShowPassword(false)
  }

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    })
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    setAuthLoading(true)
    setAuthError('')

    try {
      let result
      if (authMode === 'login') {
        result = await login({
          email: formData.email,
          password: formData.password
        })
      } else {
        result = await register({
          name: formData.name,
          email: formData.email,
          password: formData.password
        })
      }

      if (result.success) {
        closeAuthModal()
      } else {
        setAuthError(result.message || 'Authentication failed')
      }
    } catch (error) {
      setAuthError(error.message || 'Authentication failed')
    } finally {
      setAuthLoading(false)
    }
  }

  const features = [
    {
      icon: <Sparkles className="w-12 h-12 text-purple-600" />,
      title: "AI-Powered Writing",
      description: "Generate engaging LinkedIn posts in seconds using advanced AI technology"
    },
    {
      icon: <FileText className="w-12 h-12 text-purple-600" />,
      title: "200+ Templates",
      description: "Choose from proven templates that drive engagement and conversions"
    },
    {
      icon: <TrendingUp className="w-12 h-12 text-purple-600" />,
      title: "Viral Inspiration",
      description: "Get inspired by top-performing posts and trending topics"
    },
    {
      icon: <Zap className="w-12 h-12 text-purple-600" />,
      title: "Lightning Fast",
      description: "Create professional content in minutes, not hours"
    }
  ]

  const testimonials = [
    {
      initials: "SJ",
      name: "Sarah Johnson",
      role: "Marketing Director",
      quote: "MagicPen transformed my LinkedIn presence. My engagement increased 300% in just 2 months!"
    },
    {
      initials: "MC",
      name: "Michael Chen",
      role: "Startup Founder",
      quote: "The AI writer is incredible. It captures my voice perfectly and saves me hours every week."
    },
    {
      initials: "ER",
      name: "Emily Rodriguez",
      role: "Freelance Consultant",
      quote: "Best investment for my personal brand. The templates are gold!"
    }
  ]

  const faqs = [
    {
      question: "How does MagicPen work?",
      answer: "MagicPen uses advanced AI to generate LinkedIn posts based on your input. Simply choose a template, provide your topic or key points, and our AI creates engaging content tailored to your needs."
    },
    {
      question: "Do I need writing experience?",
      answer: "Not at all! MagicPen is designed for everyone, from beginners to experienced content creators. Our AI handles the heavy lifting while you focus on your message."
    },
    {
      question: "Can I customize the AI-generated posts?",
      answer: "Absolutely! You have full control to edit, refine, and personalize any content generated by MagicPen to match your unique voice and style."
    },
    {
      question: "What makes MagicPen different?",
      answer: "MagicPen combines advanced AI technology with 200+ proven templates specifically designed for LinkedIn. We focus on engagement and results, not just content generation."
    }
  ]

  const companies = ["Google", "Microsoft", "Amazon", "Meta", "Apple"]

  return (
    <div className="min-h-screen bg-white">
      {/* Navigation */}
      <nav className="fixed top-0 left-0 right-0 bg-white/95 backdrop-blur-sm z-50 border-b border-gray-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* Logo */}
            <div className="flex items-center space-x-2">
              <img src={logo} className=' w-50 h-50 w-xs:h-30'/>
              {/* <Sparkles className="w-6 h-6 text-purple-600" />
              <span className="text-xl font-bold text-gray-900">MagicPen</span> */}
            </div>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center space-x-6">
              <a href="#features" className="text-gray-600 hover:text-gray-900 transition">Features</a>
              <a href="#testimonials" className="text-gray-600 hover:text-gray-900 transition">Testimonials</a>
              <button className="text-gray-600 hover:text-gray-900 transition">Pricing</button>
              <button onClick={() => openAuthModal('login')} className="text-gray-600 hover:text-gray-900 transition">Login</button>
              <button onClick={() => openAuthModal('signup')} className="px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition">
                Get Started
              </button>
            </div>

            {/* Mobile Menu Button */}
            <button 
              className="md:hidden"
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
            >
              {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>

          {/* Mobile Menu */}
          {mobileMenuOpen && (
            <div className="md:hidden py-4 space-y-4">
              <a href="#features" className="block text-gray-600 hover:text-gray-900">Features</a>
              <a href="#testimonials" className="block text-gray-600 hover:text-gray-900">Testimonials</a>
              <button className="block text-gray-600 hover:text-gray-900">Pricing</button>
              <button onClick={() => openAuthModal('login')} className="block text-gray-600 hover:text-gray-900">Login</button>
              <button onClick={() => openAuthModal('signup')} className="block w-full px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700">
                Get Started
              </button>
            </div>
          )}
        </div>
      </nav>

      {/* Hero Section */}
      <section className="pt-32 pb-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="text-center lg:text-left">
              <h1 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent leading-tight">
                Turn your ideas into viral LinkedIn posts in seconds
              </h1>
              <p className="text-xl text-gray-600 mb-8">
                AI-powered content creation with 200+ proven templates. Write like a pro, engage like never before.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start mb-6">
                <button onClick={() => openAuthModal('signup')} className="px-8 py-4 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition font-semibold">
                  Start Writing for Free
                </button>
                <button className="px-8 py-4 bg-white border-2 border-gray-200 text-gray-900 rounded-lg hover:border-purple-600 transition font-semibold">
                  Browse Templates
                </button>
              </div>
              <p className="text-sm text-gray-500">
                No credit card required â€¢ 7-day free trial
              </p>
            </div>
            <div className="relative">
              <div className="relative rounded-2xl overflow-hidden shadow-2xl">
                <img 
                  src="https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=800&q=80" 
                  alt="MagicPen Dashboard Preview" 
                  className="w-full h-auto"
                />
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section id="features" className="py-20 bg-gradient-to-b from-white to-purple-50 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-4 text-gray-900">
              Everything you need to go viral
            </h2>
            <p className="text-xl text-gray-600">
              Powerful features designed for LinkedIn creators
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {features.map((feature, index) => (
              <div 
                key={index}
                className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition text-center"
              >
                <div className="flex justify-center mb-4">
                  {feature.icon}
                </div>
                <h3 className="text-xl font-bold mb-3 text-gray-900">
                  {feature.title}
                </h3>
                <p className="text-gray-600">
                  {feature.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Social Proof Section */}
      <section className="py-16 bg-purple-50 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <p className="text-center text-gray-600 mb-8">Trusted by professionals at</p>
          <div className="flex flex-wrap justify-center items-center gap-8 md:gap-12">
            {companies.map((company, index) => (
              <div 
                key={index}
                className="text-2xl font-bold text-gray-400 hover:text-gray-600 transition"
              >
                {company}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section id="testimonials" className="py-20 bg-white px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-4 text-gray-900">
              Loved by creators worldwide
            </h2>
            <p className="text-xl text-gray-600">
              See what our users are saying
            </p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <div 
                key={index}
                className="bg-gradient-to-br from-purple-50 to-pink-50 p-8 rounded-xl shadow-lg"
              >
                <div className="flex items-center mb-4">
                  <div className="w-12 h-12 bg-purple-600 text-white rounded-full flex items-center justify-center font-bold text-lg">
                    {testimonial.initials}
                  </div>
                  <div className="ml-4">
                    <p className="font-bold text-gray-900">{testimonial.name}</p>
                    <p className="text-sm text-gray-600">{testimonial.role}</p>
                  </div>
                </div>
                <p className="text-gray-700 italic">"{testimonial.quote}"</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-20 bg-gradient-to-b from-white to-purple-50 px-4 sm:px-6 lg:px-8">
        <div className="max-w-3xl mx-auto">
          <h2 className="text-4xl md:text-5xl font-bold mb-12 text-center text-gray-900">
            Frequently Asked Questions
          </h2>
          <div className="space-y-4">
            {faqs.map((faq, index) => (
              <div 
                key={index}
                className="bg-white rounded-xl shadow-md overflow-hidden"
              >
                <button
                  onClick={() => toggleFaq(index)}
                  className="w-full px-6 py-4 flex justify-between items-center hover:bg-gray-50 transition"
                >
                  <span className="text-left font-semibold text-gray-900">{faq.question}</span>
                  <ChevronDown 
                    className={`w-5 h-5 text-gray-600 transition-transform ${openFaq === index ? 'rotate-180' : ''}`}
                  />
                </button>
                {openFaq === index && (
                  <div className="px-6 pb-4">
                    <p className="text-gray-600">{faq.answer}</p>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Final CTA Section */}
      <section className="py-20 bg-gradient-to-r from-purple-600 to-pink-600 px-4 sm:px-6 lg:px-8">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-6 text-white">
            Ready to transform your LinkedIn presence?
          </h2>
          <p className="text-xl text-purple-100 mb-8">
            Join thousands of professionals creating viral content with MagicPen
          </p>
          <button onClick={() => openAuthModal('signup')} className="px-8 py-4 bg-white text-purple-600 rounded-lg hover:bg-gray-100 transition font-semibold text-lg">
            Start Your Free Trial
          </button>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-gray-300 py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="grid md:grid-cols-4 gap-8 mb-8">
      <div>
              <div className="flex items-center space-x-2 mb-4">
                <Sparkles className="w-6 h-6 text-purple-400" />
                <span className="text-xl font-bold text-white">MagicPen</span>
      </div>
              <p className="text-sm text-gray-400">
                AI-powered LinkedIn content creation for professionals.
        </p>
      </div>
            <div>
              <h3 className="font-bold text-white mb-4">Product</h3>
              <ul className="space-y-2 text-sm">
                <li className="hover:text-white transition cursor-pointer">Features</li>
                <li className="hover:text-white transition cursor-pointer">Templates</li>
                <li className="hover:text-white transition cursor-pointer">Pricing</li>
              </ul>
            </div>
            <div>
              <h3 className="font-bold text-white mb-4">Company</h3>
              <ul className="space-y-2 text-sm">
                <li className="hover:text-white transition cursor-pointer">About</li>
                <li className="hover:text-white transition cursor-pointer">Contact</li>
                <li className="hover:text-white transition cursor-pointer">Blog</li>
              </ul>
            </div>
            <div>
              <h3 className="font-bold text-white mb-4">Legal</h3>
              <ul className="space-y-2 text-sm">
                <li className="hover:text-white transition cursor-pointer">Privacy Policy</li>
                <li className="hover:text-white transition cursor-pointer">Terms of Service</li>
                <li className="hover:text-white transition cursor-pointer">Cookie Policy</li>
              </ul>
            </div>
          </div>
          <div className="border-t border-gray-800 pt-8">
            <p className="text-center text-sm text-gray-400">
              Â© 2025 MagicPen. All rights reserved.
            </p>
          </div>
        </div>
      </footer>

      {/* Auth Modal */}
      {showAuthModal && (
        <div className="fixed inset-0 bg-transparent z-50 flex items-center justify-center p-4">
          <div className="bg-white rounded-2xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-y-auto">
            {/* Modal Header */}
            <div className="flex justify-between items-center p-6 border-b border-gray-200">
              <div className="flex items-center space-x-2">
                <Sparkles className="w-6 h-6 text-purple-600" />
                <span className="text-xl font-bold text-gray-900">MagicPen</span>
              </div>
              <button 
                onClick={closeAuthModal}
                className="text-gray-400 hover:text-gray-600 transition"
              >
                <X className="w-6 h-6" />
              </button>
            </div>

            {/* Modal Body */}
            <div className="p-6">
              <h2 className="text-2xl font-bold mb-2 text-gray-900">
                {authMode === 'login' ? 'Welcome back!' : 'Create your account'}
              </h2>
              <p className="text-gray-600 mb-6">
                {authMode === 'login' 
                  ? 'Login to continue creating viral content' 
                  : 'Start your 7-day free trial today'}
              </p>

              {authError && (
                <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4">
                  {authError}
                </div>
              )}

              {/* Auth Form */}
              <form onSubmit={handleSubmit} className="space-y-4">
                {authMode === 'signup' && (
                  <div>
                    <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">
                      Full Name
                    </label>
                    <div className="relative">
                      <User className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                      <input
                        type="text"
                        id="name"
                        name="name"
                        value={formData.name}
                        onChange={handleInputChange}
                        required={authMode === 'signup'}
                        placeholder="John Doe"
                        className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent outline-none transition"
                      />
                    </div>
                  </div>
                )}

                <div>
                  <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
                    Email Address
                  </label>
                  <div className="relative">
                    <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                    <input
                      type="email"
                      id="email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      required
                      placeholder="you@example.com"
                      className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent outline-none transition"
                    />
                  </div>
                </div>

                <div>
                  <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-2">
                    Password
                  </label>
                  <div className="relative">
                    <Lock className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                    <input
                      type={showPassword ? "text" : "password"}
                      id="password"
                      name="password"
                      value={formData.password}
                      onChange={handleInputChange}
                      required
                      placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
                      className="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-600 focus:border-transparent outline-none transition"
                    />
                    <button
                      type="button"
                      onClick={() => setShowPassword(!showPassword)}
                      className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition"
                    >
                      {showPassword ? (
                        <EyeOff className="w-5 h-5" />
                      ) : (
                        <Eye className="w-5 h-5" />
                      )}
                    </button>
                  </div>
                  {authMode === 'signup' && (
                    <p className="text-xs text-gray-500 mt-1">
                      Must be at least 8 characters
                    </p>
                  )}
                </div>

                {authMode === 'login' && (
                  <div className="flex items-center justify-between">
                    <label className="flex items-center">
                      <input type="checkbox" className="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-600" />
                      <span className="ml-2 text-sm text-gray-600">Remember me</span>
                    </label>
                    <button type="button" className="text-sm text-purple-600 hover:text-purple-700 font-medium">
                      Forgot password?
                    </button>
                  </div>
                )}

                <button
                  type="submit"
                  disabled={authLoading}
                  className="w-full py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-lg hover:from-purple-700 hover:to-pink-700 transition font-semibold shadow-lg disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
                >
                  {authLoading ? (
                    <>
                      <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                      <span>{authMode === 'login' ? 'Signing In...' : 'Creating Account...'}</span>
                    </>
                  ) : (
                    <span>{authMode === 'login' ? 'Sign In' : 'Create Account'}</span>
                  )}
                </button>
              </form>

        

              {/* Toggle Auth Mode */}
              <div className="mt-6 text-center">
                <p className="text-sm text-gray-600">
                  {authMode === 'login' ? "Don't have an account? " : "Already have an account? "}
                  <button
                    type="button"
                    onClick={() => setAuthMode(authMode === 'login' ? 'signup' : 'login')}
                    className="text-purple-600 hover:text-purple-700 font-semibold"
                  >
                    {authMode === 'login' ? 'Sign up' : 'Sign in'}
                  </button>
                </p>
              </div>

              {authMode === 'signup' && (
                <p className="mt-4 text-xs text-center text-gray-500">
                  By signing up, you agree to our{' '}
                  <a href="#" className="text-purple-600 hover:text-purple-700">Terms of Service</a>
                  {' '}and{' '}
                  <a href="#" className="text-purple-600 hover:text-purple-700">Privacy Policy</a>
                </p>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

// Main App Component
function App() {
  const { isAuthenticated, loading } = useAuth()

  if (loading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <div className="w-12 h-12 border-4 border-purple-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-600">Loading...</p>
        </div>
      </div>
    )
  }

  return isAuthenticated ? <PromptPage /> : <LandingPage />
}

// App with Auth Provider
function AppWithAuth() {
  return (
    <AuthProvider>
      <App />
    </AuthProvider>
  )
}

export default AppWithAuth
